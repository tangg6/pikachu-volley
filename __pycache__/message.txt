import pygame
import pygame_menu
from pygame.locals import *
#from game import Game

pygame.init()

import os
os.environ['SDL_VIDEO_WINDOW_POS'] = '200,200'

#------------------------- Create a display of game ---------------------------------
size_game = (600,600)
surface = pygame.display.set_mode(size_game)
pygame.display.set_caption("Ball") #caption
icon = pygame.image.load(os.path.join('games.png'))
pygame.display.set_icon (icon)
clock = pygame.time.Clock() 
y = surface.get_height()-70


def start_the_game():
    # Main game
    running = True
    x = 375
    y = 550
    move = 20
    jump = False
    jumpy = 10

    while running:
        surface = pygame.display.set_mode(size_game)
        keyspressed = pygame.key.get_pressed()
        for event in pygame.event.get(): # User did something
            print(event)    # Useful debugging tip    
            if event.type == pygame.QUIT: # If user clicked close
                running = False # Flag that we are done so we exit this loop
        if keyspressed[ord("\x1b")]: #Pressing the x Key will quit the game
                running = False             
        if keyspressed[ord("a")]:
            x = x - move
        if keyspressed[ord("d")]:
            x = x + move
        if not(jump):
            if keyspressed[ord("w")]:
                jump = True 
        else:
            if jumpy >= -10:
                neg = 1
                if jumpy < 0:
                    neg = -1
                y = y - (jumpy**2)* 0.5 * neg
                jumpy = jumpy - 1
                print(jumpy)
                print(y)
            else:
                jump = False
                jumpy = 10
            
        if y < 0: 
            y = 0
        if y >= surface.get_height()-50: 
            y = surface.get_height()-50
        if x < 0: 
            x = 0
        if x >= surface.get_width()-50: 
            x = surface.get_width()-50   
        
        player = Rect(x, y, 50, 50)
        pygame.draw.rect(surface, (204,0,255), player)   

        pygame.display.update()                         # Actually does the screen update
        clock.tick(25)                                  # Run the game at 25 frames per second  
        
size_menu = (250,400) 
menu = pygame_menu.Menu('Welcome',size_menu[1],size_menu[0] ,theme = pygame_menu.themes.THEME_DARK)
menu.add.button('Play', start_the_game)
menu.add.button('Quit', pygame_menu.events.EXIT)
menu.mainloop(surface)

# Declare grid
#grid = Grid()